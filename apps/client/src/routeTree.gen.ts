/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PublicImport } from './routes/_public'
import { Route as AdminImport } from './routes/_admin'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as PublicIndexImport } from './routes/_public/index'
import { Route as PublicBoardIndexImport } from './routes/_public/$board/index'
import { Route as PublicBoardFeedbackIndexImport } from './routes/_public/$board/$feedback/index'
import { Route as PublicBoardFeedbackVotersImport } from './routes/_public/$board/$feedback/voters'
import { Route as PublicBoardFeedbackEditHistoryImport } from './routes/_public/$board/$feedback/edit-history'
import { Route as PublicBoardFeedbackEditImport } from './routes/_public/$board/$feedback/edit'

// Create/Update Routes

const PublicRoute = PublicImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  id: '/_admin',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRoute,
} as any)

const PublicIndexRoute = PublicIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PublicRoute,
} as any)

const PublicBoardIndexRoute = PublicBoardIndexImport.update({
  id: '/$board/',
  path: '/$board/',
  getParentRoute: () => PublicRoute,
} as any)

const PublicBoardFeedbackIndexRoute = PublicBoardFeedbackIndexImport.update({
  id: '/$board/$feedback/',
  path: '/$board/$feedback/',
  getParentRoute: () => PublicRoute,
} as any)

const PublicBoardFeedbackVotersRoute = PublicBoardFeedbackVotersImport.update({
  id: '/$board/$feedback/voters',
  path: '/$board/$feedback/voters',
  getParentRoute: () => PublicRoute,
} as any)

const PublicBoardFeedbackEditHistoryRoute =
  PublicBoardFeedbackEditHistoryImport.update({
    id: '/$board/$feedback/edit-history',
    path: '/$board/$feedback/edit-history',
    getParentRoute: () => PublicRoute,
  } as any)

const PublicBoardFeedbackEditRoute = PublicBoardFeedbackEditImport.update({
  id: '/$board/$feedback/edit',
  path: '/$board/$feedback/edit',
  getParentRoute: () => PublicRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_admin': {
      id: '/_admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicImport
      parentRoute: typeof rootRoute
    }
    '/_public/': {
      id: '/_public/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PublicIndexImport
      parentRoute: typeof PublicImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof rootRoute
    }
    '/_public/$board/': {
      id: '/_public/$board/'
      path: '/$board'
      fullPath: '/$board'
      preLoaderRoute: typeof PublicBoardIndexImport
      parentRoute: typeof PublicImport
    }
    '/_public/$board/$feedback/edit': {
      id: '/_public/$board/$feedback/edit'
      path: '/$board/$feedback/edit'
      fullPath: '/$board/$feedback/edit'
      preLoaderRoute: typeof PublicBoardFeedbackEditImport
      parentRoute: typeof PublicImport
    }
    '/_public/$board/$feedback/edit-history': {
      id: '/_public/$board/$feedback/edit-history'
      path: '/$board/$feedback/edit-history'
      fullPath: '/$board/$feedback/edit-history'
      preLoaderRoute: typeof PublicBoardFeedbackEditHistoryImport
      parentRoute: typeof PublicImport
    }
    '/_public/$board/$feedback/voters': {
      id: '/_public/$board/$feedback/voters'
      path: '/$board/$feedback/voters'
      fullPath: '/$board/$feedback/voters'
      preLoaderRoute: typeof PublicBoardFeedbackVotersImport
      parentRoute: typeof PublicImport
    }
    '/_public/$board/$feedback/': {
      id: '/_public/$board/$feedback/'
      path: '/$board/$feedback'
      fullPath: '/$board/$feedback'
      preLoaderRoute: typeof PublicBoardFeedbackIndexImport
      parentRoute: typeof PublicImport
    }
  }
}

// Create and export the route tree

interface PublicRouteChildren {
  PublicIndexRoute: typeof PublicIndexRoute
  PublicBoardIndexRoute: typeof PublicBoardIndexRoute
  PublicBoardFeedbackEditRoute: typeof PublicBoardFeedbackEditRoute
  PublicBoardFeedbackEditHistoryRoute: typeof PublicBoardFeedbackEditHistoryRoute
  PublicBoardFeedbackVotersRoute: typeof PublicBoardFeedbackVotersRoute
  PublicBoardFeedbackIndexRoute: typeof PublicBoardFeedbackIndexRoute
}

const PublicRouteChildren: PublicRouteChildren = {
  PublicIndexRoute: PublicIndexRoute,
  PublicBoardIndexRoute: PublicBoardIndexRoute,
  PublicBoardFeedbackEditRoute: PublicBoardFeedbackEditRoute,
  PublicBoardFeedbackEditHistoryRoute: PublicBoardFeedbackEditHistoryRoute,
  PublicBoardFeedbackVotersRoute: PublicBoardFeedbackVotersRoute,
  PublicBoardFeedbackIndexRoute: PublicBoardFeedbackIndexRoute,
}

const PublicRouteWithChildren =
  PublicRoute._addFileChildren(PublicRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof PublicRouteWithChildren
  '/': typeof PublicIndexRoute
  '/admin': typeof AdminIndexRoute
  '/$board': typeof PublicBoardIndexRoute
  '/$board/$feedback/edit': typeof PublicBoardFeedbackEditRoute
  '/$board/$feedback/edit-history': typeof PublicBoardFeedbackEditHistoryRoute
  '/$board/$feedback/voters': typeof PublicBoardFeedbackVotersRoute
  '/$board/$feedback': typeof PublicBoardFeedbackIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AdminRoute
  '/': typeof PublicIndexRoute
  '/admin': typeof AdminIndexRoute
  '/$board': typeof PublicBoardIndexRoute
  '/$board/$feedback/edit': typeof PublicBoardFeedbackEditRoute
  '/$board/$feedback/edit-history': typeof PublicBoardFeedbackEditHistoryRoute
  '/$board/$feedback/voters': typeof PublicBoardFeedbackVotersRoute
  '/$board/$feedback': typeof PublicBoardFeedbackIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_admin': typeof AdminRoute
  '/_public': typeof PublicRouteWithChildren
  '/_public/': typeof PublicIndexRoute
  '/admin/': typeof AdminIndexRoute
  '/_public/$board/': typeof PublicBoardIndexRoute
  '/_public/$board/$feedback/edit': typeof PublicBoardFeedbackEditRoute
  '/_public/$board/$feedback/edit-history': typeof PublicBoardFeedbackEditHistoryRoute
  '/_public/$board/$feedback/voters': typeof PublicBoardFeedbackVotersRoute
  '/_public/$board/$feedback/': typeof PublicBoardFeedbackIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/'
    | '/admin'
    | '/$board'
    | '/$board/$feedback/edit'
    | '/$board/$feedback/edit-history'
    | '/$board/$feedback/voters'
    | '/$board/$feedback'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/'
    | '/admin'
    | '/$board'
    | '/$board/$feedback/edit'
    | '/$board/$feedback/edit-history'
    | '/$board/$feedback/voters'
    | '/$board/$feedback'
  id:
    | '__root__'
    | '/_admin'
    | '/_public'
    | '/_public/'
    | '/admin/'
    | '/_public/$board/'
    | '/_public/$board/$feedback/edit'
    | '/_public/$board/$feedback/edit-history'
    | '/_public/$board/$feedback/voters'
    | '/_public/$board/$feedback/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AdminRoute: typeof AdminRoute
  PublicRoute: typeof PublicRouteWithChildren
  AdminIndexRoute: typeof AdminIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  AdminRoute: AdminRoute,
  PublicRoute: PublicRouteWithChildren,
  AdminIndexRoute: AdminIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_admin",
        "/_public",
        "/admin/"
      ]
    },
    "/_admin": {
      "filePath": "_admin.tsx"
    },
    "/_public": {
      "filePath": "_public.tsx",
      "children": [
        "/_public/",
        "/_public/$board/",
        "/_public/$board/$feedback/edit",
        "/_public/$board/$feedback/edit-history",
        "/_public/$board/$feedback/voters",
        "/_public/$board/$feedback/"
      ]
    },
    "/_public/": {
      "filePath": "_public/index.tsx",
      "parent": "/_public"
    },
    "/admin/": {
      "filePath": "admin/index.tsx"
    },
    "/_public/$board/": {
      "filePath": "_public/$board/index.tsx",
      "parent": "/_public"
    },
    "/_public/$board/$feedback/edit": {
      "filePath": "_public/$board/$feedback/edit.tsx",
      "parent": "/_public"
    },
    "/_public/$board/$feedback/edit-history": {
      "filePath": "_public/$board/$feedback/edit-history.tsx",
      "parent": "/_public"
    },
    "/_public/$board/$feedback/voters": {
      "filePath": "_public/$board/$feedback/voters.tsx",
      "parent": "/_public"
    },
    "/_public/$board/$feedback/": {
      "filePath": "_public/$board/$feedback/index.tsx",
      "parent": "/_public"
    }
  }
}
ROUTE_MANIFEST_END */
