/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as FeedbackImport } from './routes/feedback'
import { Route as IndexImport } from './routes/index'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as BoardIndexImport } from './routes/$board/index'
import { Route as BoardFeedbackImport } from './routes/$board/$feedback'

// Create/Update Routes

const FeedbackRoute = FeedbackImport.update({
  id: '/feedback',
  path: '/feedback',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRoute,
} as any)

const BoardIndexRoute = BoardIndexImport.update({
  id: '/$board/',
  path: '/$board/',
  getParentRoute: () => rootRoute,
} as any)

const BoardFeedbackRoute = BoardFeedbackImport.update({
  id: '/$board/$feedback',
  path: '/$board/$feedback',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/feedback': {
      id: '/feedback'
      path: '/feedback'
      fullPath: '/feedback'
      preLoaderRoute: typeof FeedbackImport
      parentRoute: typeof rootRoute
    }
    '/$board/$feedback': {
      id: '/$board/$feedback'
      path: '/$board/$feedback'
      fullPath: '/$board/$feedback'
      preLoaderRoute: typeof BoardFeedbackImport
      parentRoute: typeof rootRoute
    }
    '/$board/': {
      id: '/$board/'
      path: '/$board'
      fullPath: '/$board'
      preLoaderRoute: typeof BoardIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/feedback': typeof FeedbackRoute
  '/$board/$feedback': typeof BoardFeedbackRoute
  '/$board': typeof BoardIndexRoute
  '/admin': typeof AdminIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/feedback': typeof FeedbackRoute
  '/$board/$feedback': typeof BoardFeedbackRoute
  '/$board': typeof BoardIndexRoute
  '/admin': typeof AdminIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/feedback': typeof FeedbackRoute
  '/$board/$feedback': typeof BoardFeedbackRoute
  '/$board/': typeof BoardIndexRoute
  '/admin/': typeof AdminIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/feedback' | '/$board/$feedback' | '/$board' | '/admin'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/feedback' | '/$board/$feedback' | '/$board' | '/admin'
  id:
    | '__root__'
    | '/'
    | '/feedback'
    | '/$board/$feedback'
    | '/$board/'
    | '/admin/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  FeedbackRoute: typeof FeedbackRoute
  BoardFeedbackRoute: typeof BoardFeedbackRoute
  BoardIndexRoute: typeof BoardIndexRoute
  AdminIndexRoute: typeof AdminIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  FeedbackRoute: FeedbackRoute,
  BoardFeedbackRoute: BoardFeedbackRoute,
  BoardIndexRoute: BoardIndexRoute,
  AdminIndexRoute: AdminIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/feedback",
        "/$board/$feedback",
        "/$board/",
        "/admin/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/feedback": {
      "filePath": "feedback.tsx"
    },
    "/$board/$feedback": {
      "filePath": "$board/$feedback.tsx"
    },
    "/$board/": {
      "filePath": "$board/index.tsx"
    },
    "/admin/": {
      "filePath": "admin/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
